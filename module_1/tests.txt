Страница 1 - http://selenium1py.pythonanywhere.com/ru/accounts/login/

Название: Вход пользователя

Предусловия:
Должна быть открыта страница по ссылке

- Пользовательский сценарий 1.1
1) Пользователь вводит адрес электронной почты
2) Пользователь вводит пароль
3) Пользователь нажимает кнопку "Войти"

-- Тестовый сценарий 1.1.1
1) Открыть страницу по ссылке
2) Найти элемент отвечающий за ввод адреса электронной почты
3) Ввести в него корректный адрес электронной почты
4) Найти элемент отвечающий за ввод пароля
5) Ввести в него корректный пароль
6) Найти элемент кнопки "Войти"
7) Нажать на кнопку "Войти
8) Найти элемент с названием "Аккаунт" в правом верхнем углу

Ожидаемый результат:
если элемент "Аккаунт" найден - проверка прошла

Название: Проверка на корректность ввода данных при входе пользователя

Предусловия:
Должна быть открыта страница по ссылке

- Пользовательский сценарий 1.2
1) Пользователь вводит адрес электронной почты кириллицей, которая по умолчанию не может быть адресом электронной почты
2) Пользователь вводит корректный пароль
3) Пользователь нажимает кнопку "Войти"

-- Тестовый сценарий 1.2.1
1) Открыть страницу по ссылке
2) Найти элемент отвечающий за ввод адреса электронной почты
3) Ввести в него некорректный адрес электронной почты написанный кириллицей
4) Найти элемент отвечающий за ввод пароля
5) Ввести в него корректный пароль
6) Найти элемент кнопки "Войти"
7) Нажать на кнопку "Войти
8) Найти элемент-сообщение о некорректности ввода данных

Ожидаемый результат:
При некорректном вводе адреса электронной почты появляется информационное сообщение о некорректности, поэтому требуется найти элемент отвечающий за данное сообщение, и если он существует - тест успешно пройден


Страница 2 - http://selenium1py.pythonanywhere.com/ru/#

Название: Оформление заказа

Предусловия:
Должна быть открыта страница по ссылке
Пользователь должен быть авторизован

Пользовательский сценарий 2.1
1) Нажать на кнопку "Просмотр магазина"
2) Нажать на кнопку "Все товары"
3) Найти первый товар из списка предложенных
4) Нажать "Добавить в корзину
5) Нажать кнопку "Оформить"
6) Заполнить корректно все данные на странице оформления доставки
7) Нажать продолжить
8) Далее идет оплата, но данная страница не проработана

Тестовый сценарий 2.1.1
1) Открыть страницу по ссылке из предусловий
2) Найти элемент отвечающий за раскрывающийся список "Просмотр магазина"
3) Нажать на него
4) Найти элемент "Все товары" и нажать на него
5) Найти кнопку "Добавить в корзину" отвечающую за добавление в корзину первого элемента списка и нажать на него
6) Найти элемент "Оформить" и нажать на него
7) Для каждого элемента ввода текста прописать логику, где найдется элемент и подставятся корректные данные
8) Найти кнопку "Продолжить" и нажать на нее
9) Далее шаг оплаты не проработан и поэтому логику написать не представляется возможным

Ожидаемый результат:
После оплаты нужно будет проверить успешность оформления заказа, скорее всего через наличие уникального элемента на странице с текстом "Ваш заказ успешно оформлен" или нечто подобное, оформленное в данной реализации

Название: Просмотр корзины

Предусловия:
Должна быть открыта страница по ссылке

Пользовательский сценарий 2.2
1) Нажать на кнопку "Просмотр магазина"
2) Нажать на кнопку "Все товары"
3) Найти первый товар из списка предложенных
4) Нажать "Добавить в корзину
5) Нажать "Посмотреть корзину"

Тестовый сценарий 2.2.1
1) Найти элемент "Просмотр магазина" и нажать на него
2) Найти элемент "Все товары" и нажать на него
3) Найти заголовок первого товара в списке и скопировать его в переменную
4) Найти кнопку "Добавить в корзину" для первого товара в списке и нажать на нее
5) Найти кнопку "Посмотреть корзину" и нажать на нее
6) Найти заголовок товара добавленного в корзину в списке и сравнить его с записанным в переменную

Ожидаемый результат:
Если названия добавленных товаров совпадают - тест пройден
 
 


